/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.securemedicalrecords;

import com.mycompany.homepagesandfca1.HomePageGUI;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.sql.ResultSet;

/**
 * Secure Medical Records GUI (SMRGUI) This class represents the graphical user
 * interface (GUI) for securing and displaying medical records using encryption
 * techniques.
 *
 * @author Conor School
 */
public class SMRGUI extends javax.swing.JFrame {

    public static final String secret_Key = "1234567890123456"; // Example key, replace with a securely generated key for real world events
    Connection myConn; // Connection to the database

    // Method to encrypt data using AES encryption
    private String encrypt(String data) throws Exception {
        SecretKeySpec secretKey = new SecretKeySpec(secret_Key.getBytes(), "AES"); // Creating the key
        Cipher cipher = Cipher.getInstance("AES"); // Setting the cipher to AES
        cipher.init(Cipher.ENCRYPT_MODE, secretKey); // Initializing cipher in encryption mode
        byte[] encryptedData = cipher.doFinal(data.getBytes()); // Encrypting the data
        return Base64.getEncoder().encodeToString(encryptedData); // Returning encrypted data as Base64
    }
    // Method to decrypt data using AES encryption

    private String decrypt(String encryptedData) throws Exception {
        SecretKeySpec secretKey = new SecretKeySpec(secret_Key.getBytes(), "AES");
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] decryptedData = cipher.doFinal(Base64.getDecoder().decode(encryptedData));
        return new String(decryptedData);
    }

    /**
     * Creates new form SMRGUI
     */
    public SMRGUI() {
        initComponents();
        getConnection(); // Establishing database connection
    }
    
    private void getConnection() {
        try {
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/securemedicalrecords", "Username", "Password"); // fill in your credentials to access your own database
        } catch (SQLException e) {
            System.out.println("Error connecting" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ageLBL = new javax.swing.JLabel();
        weightLBL = new javax.swing.JLabel();
        heightLBL = new javax.swing.JLabel();
        genderLBL = new javax.swing.JLabel();
        docLBL = new javax.swing.JLabel();
        mhLBL = new javax.swing.JLabel();
        ageTF = new javax.swing.JTextField();
        weightTF = new javax.swing.JTextField();
        heightTF = new javax.swing.JTextField();
        genderTF = new javax.swing.JTextField();
        docTF = new javax.swing.JTextField();
        mhTF = new javax.swing.JTextField();
        homeBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgTA = new javax.swing.JTextArea();
        secureBTN = new javax.swing.JButton();
        disBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ageLBL.setText("Age:");

        weightLBL.setText("Weight:");

        heightLBL.setText("Height:");

        genderLBL.setText("Gender:");

        docLBL.setText("Name of Doctor:");

        mhLBL.setText("Medical History:");

        ageTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTFActionPerformed(evt);
            }
        });

        genderTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderTFActionPerformed(evt);
            }
        });

        docTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docTFActionPerformed(evt);
            }
        });

        homeBTN.setText("Home");
        homeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBTNActionPerformed(evt);
            }
        });

        msgTA.setColumns(20);
        msgTA.setRows(5);
        jScrollPane1.setViewportView(msgTA);

        secureBTN.setText("Secure Your Data!");
        secureBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secureBTNActionPerformed(evt);
            }
        });

        disBTN.setText("Show Your History!");
        disBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mhLBL)
                            .addComponent(docLBL)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(homeBTN)
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mhTF, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(docTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genderLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(heightLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(heightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weightLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(weightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ageLBL)
                                .addGap(46, 46, 46)
                                .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(secureBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(disBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLBL)
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightLBL)
                            .addComponent(weightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secureBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heightLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(genderLBL)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(disBTN)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docLBL)
                    .addComponent(docTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mhLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeBTN)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mhTF, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(58, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ageTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTFActionPerformed

    private void genderTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderTFActionPerformed

    private void docTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docTFActionPerformed

    private void secureBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secureBTNActionPerformed
        // TODO add your handling code here:
        try {
            Statement myStatement = myConn.createStatement();

            // Encrypt the data before storing
            String encryptedAge = encrypt(ageTF.getText());
            String encryptedWeight = encrypt(weightTF.getText());
            String encryptedHeight = encrypt(heightTF.getText());
            String encryptedGender = encrypt(genderTF.getText());
            String encryptedDoc = encrypt(docTF.getText());
            String encryptedHistory = encrypt(mhTF.getText());

            // Inserting encrypted data into the info table
            myStatement.executeUpdate("INSERT INTO info (Age, Weight, Height, Gender, Doctor, Medical_History) "
                    + "VALUES ('" + encryptedAge + "', '" + encryptedWeight + "', '" + encryptedHeight
                    + "', '" + encryptedGender + "', '" + encryptedDoc + "', '" + encryptedHistory + "')");

        } catch (Exception e) {
            System.out.println("Error " + e);
        }
        msgTA.append("Your Data is Secured!");  // Display message to the user
    
    }//GEN-LAST:event_secureBTNActionPerformed

    private void disBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disBTNActionPerformed
        // TODO add your handling code here:
         try {
        Statement myStatement = myConn.createStatement();
        ResultSet rs = myStatement.executeQuery("SELECT * FROM info");

        // Clear the text area before displaying new data
        msgTA.setText("");

        while (rs.next()) {
            // Decrypt the data after retrieving it
            String age = decrypt(rs.getString("Age"));
            String weight = decrypt(rs.getString("Weight"));
            String height = decrypt(rs.getString("Height"));
            String gender = decrypt(rs.getString("Gender"));
            String doctor = decrypt(rs.getString("Doctor"));
            String medicalHistory = decrypt(rs.getString("Medical_History"));

            // Format the data to display in msgTA
            msgTA.append("Age: " + age + "\n");
            msgTA.append("Weight: " + weight + "\n");
            msgTA.append("Height: " + height + "\n");
            msgTA.append("Gender: " + gender + "\n");
            msgTA.append("Doctor: " + doctor + "\n");
            msgTA.append("Medical History: " + medicalHistory + "\n");
            msgTA.append("----------------------------\n");
        }
    } catch (Exception e) {
        System.out.println("Error retrieving data " + e);
    }
    }//GEN-LAST:event_disBTNActionPerformed

    private void homeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_homeBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SMRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SMRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SMRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SMRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SMRGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLBL;
    private javax.swing.JTextField ageTF;
    private javax.swing.JButton disBTN;
    private javax.swing.JLabel docLBL;
    private javax.swing.JTextField docTF;
    private javax.swing.JLabel genderLBL;
    private javax.swing.JTextField genderTF;
    private javax.swing.JLabel heightLBL;
    private javax.swing.JTextField heightTF;
    private javax.swing.JButton homeBTN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mhLBL;
    private javax.swing.JTextField mhTF;
    private javax.swing.JTextArea msgTA;
    private javax.swing.JButton secureBTN;
    private javax.swing.JLabel weightLBL;
    private javax.swing.JTextField weightTF;
    // End of variables declaration//GEN-END:variables
// Getter methods for form fields
    public javax.swing.JTextField getAgeTF() {
        return ageTF;
    }

    public javax.swing.JTextField getWeightTF() {
        return weightTF;
    }

    public javax.swing.JTextField getHeightTF() {
        return heightTF;
    }

    public javax.swing.JTextField getGenderTF() {
        return genderTF;
    }

    public javax.swing.JTextField getDocTF() {
        return docTF;
    }

    public javax.swing.JTextField getMHTF() {
        return mhTF;
    }
}
