/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany.securedocument;

import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;

/**
 * This class is responsible for generating a key pair (public and private keys) used for RSA encryption
 * RSA is a widely used encryption algorithm that relies on a pair of keys:
 * one for encryption (public key) and another for decryption (private key)
 * By generating a unique key pair we can enable secure data encryption and decryption
 * 
 * Author: Aaron
 */
public class KeyPairGeneratorExample {
    // Private field to store the generated private key
    private PrivateKey privateKey;

    // Private field to store the generated public key
    private PublicKey publicKey;

    
    // Constructor for KeyPairGeneratorExample class
    // When an instance of this class is created, a new RSA key pair is generated
    // throws Exception - if the key generation process encounters an issue
    public KeyPairGeneratorExample() throws Exception {
        // Create a KeyPairGenerator object configured for the RSA algorithm
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");

        // Initialize the key generator with a 2048-bit key size,
        // which provides a high level of security
        // SecureRandom is used as a source of randomness
        keyGen.initialize(2048, new SecureRandom());

        // Generate the RSA key pair (public and private keys)
        KeyPair keyPair = keyGen.generateKeyPair();

        // Store the private key from the generated key pair in the privateKey field
        this.privateKey = keyPair.getPrivate();

        // Store the public key from the generated key pair in the publicKey field
        this.publicKey = keyPair.getPublic();
    }

    
     // Returns the private key generated by this instance
     // return PrivateKey - the generated private key for decryption
    public PrivateKey getPrivateKey() {
        return privateKey;
    }

    // Returns the public key generated by this instance
    // return PublicKey - the generated public key for encryption
    public PublicKey getPublicKey() {
        return publicKey;
    }
}
